[General]
# URL to scrape S&P 500 tickers from Wikipedia
sp500_list_url = https://en.wikipedia.org/wiki/List_of_S%26P_500_companies

# Output Excel file name
output_excel_file = results/sp500_fundamental_scores.xlsx
# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
log_level = WARNING

log_to_file = False

[Data]
# SQLite database file name
db_name = S&P500_finance_data.db
# Number of years of annual data needed for CAGR calculations
years_of_annual_data = 3
# Download only missing data (True) or redownload all (False)
incremental_download = False
# Delay between ticker downloads (in seconds) to avoid rate limiting
download_delay = 0.1

[Screening]
# Enable financial health screening (True/False)
enable_screening = True
# Maximum acceptable Debt-to-Equity ratio
max_debt_to_equity = 3.0
# Minimum acceptable Interest Coverage Ratio
min_interest_coverage = 2.0

[Scoring_Weights]
# Weights for fusing CAGR and Acceleration (must sum to 1)
w_cagr = 0.6
w_accel = 0.4
# Weights for final dimensions (must sum to 1)
w_growth_rev = 0.25
w_growth_eps = 0.25
w_profitability = 0.15
w_efficiency = 0.15
w_fcf = 0.20
w_eps_turnaround = 0.15

[Calculation_Params]
# Minimum positive EPS required in the first year for CAGR calculation
min_eps_for_cagr = 0.01
# How to handle division by zero/negative EPS in QoQ growth calc (e.g., 'zero', 'clip_large', 'error')
# 'zero': set growth to 0
# 'clip_large': set growth to a large positive/negative number (e.g., +/- 500%) - not implemented here for simplicity
# 'error': raise error / result in NaN (default pandas behavior often)
# Let's use 'zero' for simplicity in the code below
eps_qoq_denominator_handling = zero
# Value to use if QoQ denominator is zero/negative based on handling rule
eps_qoq_zero_value = 1.0
# Default value for CAGR if calculation fails (e.g., negative start)
# Or 0, or NaN - Use NaN for easier handling later
default_cagr = -999

# If regression fails
default_slope = 0

[Methodology]
# Specify the ranking method for standardization.
# Options: 'overall' (rank across all companies), 'industry' (rank within GICS Sector)
ranking_method = industry
